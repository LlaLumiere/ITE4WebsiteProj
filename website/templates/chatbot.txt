<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chatbot</title>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <style>
        /* Add your styles here */

        #chat-container {
            max-width: 600px;
            margin: auto;
            padding: 20px;
        }

        .message {
            margin-bottom: 10px;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
            display: flex;
            justify-content: space-between;
        }

        body {
            font-family: 'Arial', sans-serif;
            background-color: #97CAEF;
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
        }

        .messenger-container {
            background-color: white;
            border-radius: 15px;
            width: 900px;
            height: 600px;
            display: flex;
            flex-direction: column;
            box-shadow: 0 3px 10px rgba(0, 0, 0, 0.2);
        }

        .messenger-header {
            background-color: #216291;
            color: white;
            text-align: center;
            padding: 15px 0;
            border-top-left-radius: 15px;
            border-top-right-radius: 15px;
            font-weight: bold;
        }

        .messenger-messages {
            flex: 1;
            overflow-y: auto;
            padding: 10px;
        }

        .message {
            padding: 10px;
            border-radius: 15px;
            margin: 10px;
            max-width: 80%;
            clear: both;
        }

        .message.bot {
            background-color: #e1f3fd;
            align-self: flex-start;
            float: left;
        }

        .message.user {
            background-color: #6fbef7;
            align-self: flex-end;
            float: right;
        }

        .messenger-input {
            display: flex;
            border-top: 1px solid #ddd;
            padding: 10px;
        }

        .messenger-input input {
            flex: 1;
            padding: 10px;
            border: none;
            border-radius: 20px;
            margin-right: 10px;
            outline: none;
        }

        .messenger-input button {
            background-color: #216291;
            color: white;
            border: none;
            border-radius: 20px;
            padding: 10px 15px;
            cursor: pointer;
            outline: none;
            font-size: 16px;
        }

        ul {
            float: right;
            margin-right: 20px;
        }

        ul li {
            list-style: none;
            margin: 0 8px;
            display: inline-block;
            line-height: 80px;
        }

        ul li a {
            text-decoration: none;
            color: white;
            font-size: 20px;
            padding: 6px 15px;
            font-family: 'Arial', sans-serif;
            transition: .4s;
        }

        ul li a.active,
        ul li a:hover {
            background: #55BCC9;
            border-radius: 20px;
        }

    </style>
</head>

<body>
    <!--<div id="chat-container">
        <div id="chat-messages"></div>
        <input type="text" id="messageInput" placeholder="Type a message...">
        <button onclick="sendMessage()">Send</button>
        <button onclick="startNewChat()">Start New Chat</button>
        <button onclick="loadPreviousChat()">Load Previous Chat</button>
    </div>-->

    <div class="messenger-container">
        <div class="messenger-header">Ai ChatBot</div>
        <div class="messenger-messages" id="messengerMessages">
            <div class="message bot">Hello {{ user.userprofile.firstname }} {{ user.userprofile.lastname }}!</div>
        </div>
        <div class="messenger-input">
            <input type="text" placeholder="Type your message..." id="userInput">
            <button onclick="sendMessage()">Send</button>
            <button onclick="startNewChat()">Start New Chat</button>
            <button onclick="loadPreviousChat()">Load Previous Chat</button>
        </div>
    </div>

    <script>
        // Add your JavaScript functions here
        function sendMessages() {
            const userInput = document.getElementById('userInput').value;
            const messengerMessages = document.getElementById('messengerMessages');
    
            // Append the user's message
            const userMessageElem = document.createElement('div');
            userMessageElem.classList.add('message', 'user');
            userMessageElem.innerText = userInput;
            messengerMessages.appendChild(userMessageElem);
    
            // Use AJAX to get the bot's response
            $.ajax({
                url: '/ask/',  // Endpoint at '/ask/'
                type: 'POST',
                data: { 'userInput': userInput },
                success: function(response) {
                    // Append bot's response
                    const botMessageElem = document.createElement('div');
                    botMessageElem.classList.add('message', 'bot');
                    botMessageElem.innerText = response.bot_response;
                    messengerMessages.appendChild(botMessageElem);
                }
            }); 
    
            // Clear the user's input
            document.getElementById('userInput').value = '';
    
            // Auto scroll to the bottom
            messengerMessages.scrollTop = messengerMessages.scrollHeight;
        }

        // ...
        async function sendMessage() {
            const messageInput = document.getElementById('messageInput');
            const message = messageInput.value.trim();

            if (message === '') {
                return;
            }

            const chatHistory = getChatHistory();
            const editingIndex = chatHistory.findIndex(entry => entry.isEditing);

            if (editingIndex !== -1) {
                // Editing an existing message
                chatHistory[editingIndex] = { content: message };
                chatHistory[editingIndex].isEditing = false;
            } else {
                // Save a new message to local storage
                chatHistory.push({ content: message });
            }

            saveChatHistory(chatHistory);
            userInput.value = '';
            fetchMessages();
        }

        function editMessage(index) {
            const chatHistory = getChatHistory();
            chatHistory[index].isEditing = true;
            saveChatHistory(chatHistory);

            // Populate the input field with the message for editing
            const messageInput = document.getElementById('userInput');
            userInput.value = chatHistory[index].content;
        }

        function cancelEdit(index) {
            const chatHistory = getChatHistory();
            chatHistory[index].isEditing = false;
            saveChatHistory(chatHistory);
            fetchMessages();
        }

        function startNewChat() {
            // Clear the chat history in local storage
            saveChatHistory([]);
            fetchMessages();
        }

        function loadPreviousChat() {
            // Load and display the previous chat history
            fetchMessages();
        }

        function fetchMessages() {
            const messages = getChatHistory();
            const chatMessages = document.getElementById('messengerMessages');
            chatMessages.innerHTML = '';

            messages.forEach((message, index) => {
                const messageDiv = document.createElement('div');
                messageDiv.className = 'message';
                const contentDiv = document.createElement('div');
                contentDiv.textContent = message.content;
                messageDiv.appendChild(contentDiv);

                const buttonsDiv = document.createElement('div');
                const editButton = document.createElement('button');
                const cancelButton = document.createElement('button');

                if (message.isEditing) {
                    editButton.textContent = 'Update';
                    editButton.onclick = () => sendMessage();
                    cancelButton.textContent = 'Cancel';
                    cancelButton.onclick = () => cancelEdit(index);
                } else {
                    editButton.textContent = 'Edit';
                    editButton.onclick = () => editMessage(index);
                    cancelButton.textContent = 'Delete';
                    cancelButton.onclick = () => deleteMessage(index);
                }

                buttonsDiv.appendChild(editButton);
                buttonsDiv.appendChild(cancelButton);
                messageDiv.appendChild(buttonsDiv);

                chatMessages.appendChild(messageDiv);
            });
        }

        function deleteMessage(index) {
            const chatHistory = getChatHistory();
            chatHistory.splice(index, 1);
            saveChatHistory(chatHistory);
            fetchMessages();
        }

        function getChatHistory() {
            // Retrieve chat history from local storage
            const storedHistory = localStorage.getItem('chatHistory');
            return JSON.parse(storedHistory) || [];
        }

        function saveChatHistory(history) {
            // Save chat history to local storage
            localStorage.setItem('chatHistory', JSON.stringify(history));
        }

        // Fetch messages when the page loads
        fetchMessages();
    </script>
</body>

</html>
